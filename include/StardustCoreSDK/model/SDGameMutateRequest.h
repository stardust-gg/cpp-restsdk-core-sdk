/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-07-25T00:59:12Z
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SDGameMutateRequest.h
 *
 * 
 */

#ifndef GG_STARDUST_CORESDK_MODEL_SDGameMutateRequest_H_
#define GG_STARDUST_CORESDK_MODEL_SDGameMutateRequest_H_


#include "StardustCoreSDK/ModelBase.h"

#include "StardustCoreSDK/Object.h"
#include <cpprest/details/basic_types.h>

namespace gg {
namespace stardust {
namespace coresdk {
namespace model {


/// <summary>
/// 
/// </summary>
class  SDGameMutateRequest
    : public ModelBase
{
public:
    SDGameMutateRequest();
    virtual ~SDGameMutateRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SDGameMutateRequest members

    /// <summary>
    /// The games description
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);

    /// <summary>
    /// The games news
    /// </summary>
    utility::string_t getNews() const;
    bool newsIsSet() const;
    void unsetNews();

    void setNews(const utility::string_t& value);

    /// <summary>
    /// Game properties
    /// </summary>
    std::shared_ptr<Object> getProps() const;
    bool propsIsSet() const;
    void unsetProps();

    void setProps(const std::shared_ptr<Object>& value);

    /// <summary>
    /// Test mode will enable any test mode features. Currently in development.
    /// </summary>
    bool isTestMode() const;
    bool testModeIsSet() const;
    void unsetTestMode();

    void setTestMode(bool value);


protected:
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    utility::string_t m_News;
    bool m_NewsIsSet;
    std::shared_ptr<Object> m_Props;
    bool m_PropsIsSet;
    bool m_TestMode;
    bool m_TestModeIsSet;
};


}
}
}
}

#endif /* GG_STARDUST_CORESDK_MODEL_SDGameMutateRequest_H_ */
