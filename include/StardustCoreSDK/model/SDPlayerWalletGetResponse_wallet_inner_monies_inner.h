/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-07-25T00:59:12Z
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SDPlayerWalletGetResponse_wallet_inner_monies_inner.h
 *
 * The Money object representation of the balance
 */

#ifndef GG_STARDUST_CORESDK_MODEL_SDPlayerWalletGetResponse_wallet_inner_monies_inner_H_
#define GG_STARDUST_CORESDK_MODEL_SDPlayerWalletGetResponse_wallet_inner_monies_inner_H_


#include "StardustCoreSDK/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace gg {
namespace stardust {
namespace coresdk {
namespace model {


/// <summary>
/// The Money object representation of the balance
/// </summary>
class  SDPlayerWalletGetResponse_wallet_inner_monies_inner
    : public ModelBase
{
public:
    SDPlayerWalletGetResponse_wallet_inner_monies_inner();
    virtual ~SDPlayerWalletGetResponse_wallet_inner_monies_inner();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SDPlayerWalletGetResponse_wallet_inner_monies_inner members

    /// <summary>
    /// The balance in minor units. ex: 2000000 for 2 coins USDC
    /// </summary>
    utility::string_t getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();

    void setAmount(const utility::string_t& value);

    /// <summary>
    /// The currency code associated with the amount. ex: &#39;USDC&#39;
    /// </summary>
    utility::string_t getCurrency() const;
    bool currencyIsSet() const;
    void unsetCurrency();

    void setCurrency(const utility::string_t& value);


protected:
    utility::string_t m_Amount;
    bool m_AmountIsSet;
    utility::string_t m_Currency;
    bool m_CurrencyIsSet;
};


}
}
}
}

#endif /* GG_STARDUST_CORESDK_MODEL_SDPlayerWalletGetResponse_wallet_inner_monies_inner_H_ */
