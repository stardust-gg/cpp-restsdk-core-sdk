/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-07-25T00:59:12Z
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SDTemplateMutateRequest.h
 *
 * 
 */

#ifndef GG_STARDUST_CORESDK_MODEL_SDTemplateMutateRequest_H_
#define GG_STARDUST_CORESDK_MODEL_SDTemplateMutateRequest_H_


#include "StardustCoreSDK/ModelBase.h"

#include "StardustCoreSDK/Object.h"

namespace gg {
namespace stardust {
namespace coresdk {
namespace model {


/// <summary>
/// 
/// </summary>
class  SDTemplateMutateRequest
    : public ModelBase
{
public:
    SDTemplateMutateRequest();
    virtual ~SDTemplateMutateRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SDTemplateMutateRequest members

    /// <summary>
    /// This is the templateId returned from template/create (ex. 5)
    /// </summary>
    int32_t getTemplateId() const;
    bool templateIdIsSet() const;
    void unsetTemplateId();

    void setTemplateId(int32_t value);

    /// <summary>
    /// Specifies which properties you want to change (ex. {prop1: 5, prop2: 6, prop3: 7})
    /// </summary>
    std::shared_ptr<Object> getProps() const;
    bool propsIsSet() const;
    void unsetProps();

    void setProps(const std::shared_ptr<Object>& value);

    /// <summary>
    /// Returned to marketplaces as contract metadata
    /// </summary>
    std::shared_ptr<Object> getPublicContractMetadata() const;
    bool publicContractMetadataIsSet() const;
    void unsetPublicContractMetadata();

    void setPublicContractMetadata(const std::shared_ptr<Object>& value);

    /// <summary>
    /// Inherited by tokens, and returned to marketplaces as token metadata
    /// </summary>
    std::shared_ptr<Object> getPublicTokenMetadata() const;
    bool publicTokenMetadataIsSet() const;
    void unsetPublicTokenMetadata();

    void setPublicTokenMetadata(const std::shared_ptr<Object>& value);


protected:
    int32_t m_TemplateId;
    bool m_TemplateIdIsSet;
    std::shared_ptr<Object> m_Props;
    bool m_PropsIsSet;
    std::shared_ptr<Object> m_PublicContractMetadata;
    bool m_PublicContractMetadataIsSet;
    std::shared_ptr<Object> m_PublicTokenMetadata;
    bool m_PublicTokenMetadataIsSet;
};


}
}
}
}

#endif /* GG_STARDUST_CORESDK_MODEL_SDTemplateMutateRequest_H_ */
