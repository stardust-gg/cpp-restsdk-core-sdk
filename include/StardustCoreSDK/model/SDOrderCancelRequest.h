/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-06-15T19:52:41Z
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SDOrderCancelRequest.h
 *
 * 
 */

#ifndef GG_STARDUST_CORESDK_MODEL_SDOrderCancelRequest_H_
#define GG_STARDUST_CORESDK_MODEL_SDOrderCancelRequest_H_


#include "StardustCoreSDK/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace gg {
namespace stardust {
namespace coresdk {
namespace model {


/// <summary>
/// 
/// </summary>
class  SDOrderCancelRequest
    : public ModelBase
{
public:
    SDOrderCancelRequest();
    virtual ~SDOrderCancelRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SDOrderCancelRequest members

    /// <summary>
    /// The Player&#39;s id, can be found with Player/getId(s). Also returned from player/create (ex. CzySggxVQz51jciGRFDY7d5BER2fav6TNEnPGjusPJPd)
    /// </summary>
    utility::string_t getFromPlayerId() const;
    bool fromPlayerIdIsSet() const;
    void unsetFromPlayerId();

    void setFromPlayerId(const utility::string_t& value);

    /// <summary>
    /// Game ID Number (unsigned 32 bit integer)
    /// </summary>
    int32_t getGameId() const;
    bool gameIdIsSet() const;
    void unsetGameId();

    void setGameId(int32_t value);

    /// <summary>
    /// Order ID Number (unsigned 32 bit integer)
    /// </summary>
    int32_t getOrderId() const;
    bool orderIdIsSet() const;
    void unsetOrderId();

    void setOrderId(int32_t value);


protected:
    utility::string_t m_FromPlayerId;
    bool m_FromPlayerIdIsSet;
    int32_t m_GameId;
    bool m_GameIdIsSet;
    int32_t m_OrderId;
    bool m_OrderIdIsSet;
};


}
}
}
}

#endif /* GG_STARDUST_CORESDK_MODEL_SDOrderCancelRequest_H_ */
