/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-07-25T00:59:12Z
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "StardustCoreSDK/model/SDGameGetResponse_fees_inner.h"

namespace gg {
namespace stardust {
namespace coresdk {
namespace model {



SDGameGetResponse_fees_inner::SDGameGetResponse_fees_inner()
{
    m_FeePercentage = 0;
    m_FeePercentageIsSet = false;
    m_FeeType = utility::conversions::to_string_t("");
    m_FeeTypeIsSet = false;
}

SDGameGetResponse_fees_inner::~SDGameGetResponse_fees_inner()
{
}

void SDGameGetResponse_fees_inner::validate()
{
    // TODO: implement validation
}

web::json::value SDGameGetResponse_fees_inner::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_FeePercentageIsSet)
    {
        val[utility::conversions::to_string_t(U("feePercentage"))] = ModelBase::toJson(m_FeePercentage);
    }
    if(m_FeeTypeIsSet)
    {
        val[utility::conversions::to_string_t(U("feeType"))] = ModelBase::toJson(m_FeeType);
    }

    return val;
}

bool SDGameGetResponse_fees_inner::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("feePercentage"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("feePercentage")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setFeePercentage;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFeePercentage);
            setFeePercentage(refVal_setFeePercentage);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("feeType"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("feeType")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setFeeType;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFeeType);
            setFeeType(refVal_setFeeType);
        }
    }
    return ok;
}

void SDGameGetResponse_fees_inner::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_FeePercentageIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("feePercentage")), m_FeePercentage));
    }
    if(m_FeeTypeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("feeType")), m_FeeType));
    }
}

bool SDGameGetResponse_fees_inner::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("feePercentage"))))
    {
        int32_t refVal_setFeePercentage;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("feePercentage"))), refVal_setFeePercentage );
        setFeePercentage(refVal_setFeePercentage);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("feeType"))))
    {
        utility::string_t refVal_setFeeType;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("feeType"))), refVal_setFeeType );
        setFeeType(refVal_setFeeType);
    }
    return ok;
}

int32_t SDGameGetResponse_fees_inner::getFeePercentage() const
{
    return m_FeePercentage;
}

void SDGameGetResponse_fees_inner::setFeePercentage(int32_t value)
{
    m_FeePercentage = value;
    m_FeePercentageIsSet = true;
}

bool SDGameGetResponse_fees_inner::feePercentageIsSet() const
{
    return m_FeePercentageIsSet;
}

void SDGameGetResponse_fees_inner::unsetFeePercentage()
{
    m_FeePercentageIsSet = false;
}
utility::string_t SDGameGetResponse_fees_inner::getFeeType() const
{
    return m_FeeType;
}

void SDGameGetResponse_fees_inner::setFeeType(const utility::string_t& value)
{
    m_FeeType = value;
    m_FeeTypeIsSet = true;
}

bool SDGameGetResponse_fees_inner::feeTypeIsSet() const
{
    return m_FeeTypeIsSet;
}

void SDGameGetResponse_fees_inner::unsetFeeType()
{
    m_FeeTypeIsSet = false;
}
}
}
}
}


