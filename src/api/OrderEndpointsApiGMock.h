/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-07-25T00:59:12Z
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef GG_STARDUST_CORESDK_OrderEndpointsApiGMock_H_
#define GG_STARDUST_CORESDK_OrderEndpointsApiGMock_H_

#include <gmock/gmock.h>

#include "OrderEndpointsApi.h"

namespace gg {
namespace stardust {
namespace coresdk {

using namespace gg::stardust::coresdk::model;


class  OrderEndpointsApiMock : public IOrderEndpointsApi
{
public:
    using Base = IOrderEndpointsApi;

    OrderEndpointsApiMock() = default;
    explicit OrderEndpointsApiMock( std::shared_ptr<ApiClient> apiClient ) { };
    ~OrderEndpointsApiMock() override = default;

    MOCK_METHOD1( orderBuyPost, pplx::task<std::shared_ptr<Object>> (
        std::shared_ptr<SDOrderBuyRequest> sDOrderBuyRequest
    ) );
    MOCK_METHOD1( orderCancelDelete, pplx::task<std::shared_ptr<Object>> (
        utility::string_t orderId
    ) );
    MOCK_METHOD1( orderCreatePost, pplx::task<std::shared_ptr<SDOrderCreateResponse>> (
        std::shared_ptr<SDOrderCreateRequest> sDOrderCreateRequest
    ) );
    MOCK_METHOD4( orderGetAllGet, pplx::task<std::vector<std::shared_ptr<SDOrderGetAllResponse>>> (
        utility::string_t start,
        utility::string_t limit,
        boost::optional<utility::string_t> playerId,
        boost::optional<utility::string_t> status
    ) );
    MOCK_METHOD1( orderGetGet, pplx::task<std::shared_ptr<SDOrderGetResponse>> (
        utility::string_t orderId
    ) );
};

}
}
}

#endif /* GG_STARDUST_CORESDK_OrderEndpointsApiGMock_H_ */

